name: Create Release From Composer Version (Build Only)

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    name: Tag and Release If Version Changed
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # needed for full git history and tagging

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install Composer dependencies (no dev)
        run: composer install --no-dev --optimize-autoloader

      - name: Install PHP-Scoper globally
        run: composer global require humbug/php-scoper

      - name: Add global Composer bin to PATH
        run: echo "${HOME}/.composer/vendor/bin" >> $GITHUB_PATH

      - name: Clean previous vendor-prefix if any
        run: rm -rf framework/vendor-prefix

      - name: Run PHP-Scoper
        run: php-scoper add-prefix --output-dir=framework/vendor-prefix --config=scoper.inc.php --force

      - name: Run composer autoload
        run: COMPOSER_VENDOR_DIR=framework/vendor-prefix composer dump-autoload

      - name: Get version from composer.json
        id: version
        run: |
          VERSION=$(jq -r '.version' composer.json)
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: tagcheck
        run: |
          if git rev-parse "v${{ steps.version.outputs.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_OUTPUT
          else
            echo "TAG_EXISTS=false" >> $GITHUB_OUTPUT
          fi

      - name: Package release contents (src + vendor-prefix + composer.json)
        if: steps.tagcheck.outputs.TAG_EXISTS == 'false'
        run: |
          mkdir release
          cp -r framework/src release/
          cp -r framework/vendor-prefix release/
          cp framework/composer.json release/
          cd release
          zip -r ../archetype.zip .

      - name: Create Git tag
        if: steps.tagcheck.outputs.TAG_EXISTS == 'false'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ steps.version.outputs.VERSION }}
          git push origin v${{ steps.version.outputs.VERSION }}

      - name: Create GitHub Release
        if: steps.tagcheck.outputs.TAG_EXISTS == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          name: v${{ steps.version.outputs.VERSION }}
          files: archetype.zip
